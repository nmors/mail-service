swagger: "2.0"
info:
  description: "This is a simple mail service which allows you to send an email using mailgun or sendgrid"
  version: "1.0.0"
  title: "Mail Service"
  contact:
    email: "nathan@mors.me"
  license:
    name: "UNLICENCED"

host: "morsmail.herokuapp.com"
basePath: "/"
schemes:
- "https"
externalDocs:
  description: "GitHub Project"
  url: "http://github.com/nmors/mail-service"

paths:
  /message:
    post:
      tags:
      - "message"
      summary: "posts a message via email to someone!"
      description: ""
      operationId: "postMessage"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Message object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        202:
          description: "Accepted the message"
        400:
          description: "Invalid input"

  # /message/{id}:
  #   get:
  #     tags:
  #     - "message"
  #     summary: "Retrieves the delivery status for the given message id"
  #     description: "Pass the id of the message as a URI parameter, and the API will return you the status of the message."
  #     operationId: "getMessage"
  #     produces:
  #     - "application/json"
  #     parameters:
  #     - in: "path"
  #       name: "id"
  #       description: "the ID of the message to retrieve"
  #       required: true
  #       schema:
  #         $ref: "#/definitions/MessageId"
  #     responses:
  #       200:
  #         description: "Retreived the message"
  #       400:
  #         description: "Invalid input"

  /audit:
    get:
      tags:
      - "audit"
      summary: "Retrieves the audit logs"
      description: "this endpoint will return a list of audit messages. they are JSON objects seperated by new line."
      operationId: "getAudit"
      responses:
        200:
          description: "returns the audit log"
        500:
          description: "Server Error"

definitions:
  Message:
    type: "object"
    required:
    - "to"
    - "from"
    - "subject"
    - "text"
    properties:
      to:
        type: "array"
        example:
        - "nathan@mors.me"
        items:
          type: "string"
      from:
        type: "string"
        example: "nathan@mors.me"
      subject:
        type: "string"
        example: "Friday Night"
      text:
        type: "string"
        example: "Hey Mate! Let's go for drinks this Friday night!"
  MessageId:
    type: "string"